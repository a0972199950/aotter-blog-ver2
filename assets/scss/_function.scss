// replace substring with another string
// credits: https://css-tricks.com/snippets/sass/str-replace-function/
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }
  @return $string;
}

// return css color variable with different opacity value
@function alpha($color, $opacity) {
  // STEP1: Make: var(--color-primary)  =>  --color-primary
  $color: str-replace($color, "var(");
  $color: str-replace($color, ")");

  // STEP2: Create three CSS variables: --color-primary  =>  var(--color-primary-h)  &  var(--color-primary-s)  &  var(--color-primary-l)
  $hue: var(#{$color + "-h"});
  $saturation: var(#{$color + "-s"});
  $lightness: var(#{$color + "-l"});

  // STEP3: Return new CSS hsla color: hsla(var(--color-primary-h), var(--color-primary-s), var(--color-primary-l), $opacity)
  @return hsla($hue, $saturation, $lightness, $opacity);
}

@function lightness($color, $lightnessMultiplier) {
  $color: str-replace($color, "var(");
  $color: str-replace($color, ")");
  $hue: var(#{$color + "-h"});
  $saturation: var(#{$color + "-s"});
  $lightness: var(#{$color + "-l"});

  @return hsl($hue, $saturation, calc(#{$lightness} * #{$lightnessMultiplier}));
}